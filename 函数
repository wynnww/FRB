for i =1:n
    for j =1:M-1
        
%             t(i,j)=lognrnd(r_s(j), sigma_s); %站间行驶时间
            if i ==1
                if j==1
                    
                   
                    l(i,j)=0;
                    w(i,j)=0;
                    sheet_data = readtable(filename, 'Sheet', sheet_names{j}, 'PreserveVariableNames', true);
                    sheet_data.Properties.VariableNames = {'car', 'station1', 'time1', 'station2', 'time2'};
%                     sheet_data{:,3} = datetime(table2array(sheet_data(:,3)),'Format','yyyy-MM-dd HH:mm:ss');
%                     new_table = table(datetime(table2array(sheet_data(:,3)),'Format','yyyy-MM-dd HH:mm:ss'));
%                     new_table = new_table{:,1};
                    sheet_data.time1 = datetime(sheet_data.time1, 'InputFormat', 'yyyy-MM-dd HH:mm:ss');
                    stranded{j} = []; % 存储被滞留的乘客信息 
                    a_time(i,j) = start_time + minutes(a(i,j));
                    valid_sheet_data = sheet_data(sheet_data.time1 < a_time(i,j), :);
                    new_col = table(zeros(size(valid_sheet_data, 1), 1)); % 新列，全为0
                    valid_sheet_data = [valid_sheet_data, new_col]; % 将新列添加到 valid_sheet_data
                    sheet_data.station2 = str2double(string(sheet_data.station2));
                    %给每辆车新建一个记录乘客信息的表格
                    up_sheet_data{i} = table('Size',[0 7],'VariableTypes',{'double','double','datetime','double','datetime','datetime','datetime'},'VariableNames',{'car','station1','time1','station2','time2','uptime','downtime'});
                    up_sheet_data{i}.uptime = NaT(height(up_sheet_data{i}),1);
                    up_sheet_data{i}.downtime = NaT(height(up_sheet_data{i}),1);

                    for m = 1:size(valid_sheet_data, 1)
                        k=table2array(valid_sheet_data(m,4));
                        if c*PP(i)-l(i,j)>0
                                man(i,j,k)=man(i,j,k)+1; %实际上i车的在j站去k站的人
                                l(i,j)=l(i,j)+1;%j站车上人数
                                up_sheet_data{i}(end+1,1:5) = valid_sheet_data(m,1:5);
                                up_sheet_data{i}.uptime(end) = a_time(i,j);

                        else
                            w(i,j)=w(i,j)+1;  %在j站等i车因车容量限制无法上车的人
                            w1(i,j,k)=w1(i,j,k)+1;%在j站去k站的被i车滞留的人
                            stranded{j} = [stranded{j}; valid_sheet_data(m, :),table(i), table(j), table(k)]; % 存储被滞留的乘客信息

                        end
                        Aup_wait(i,j,k)=man(i,j,k); %j站等i去k站的人实际上车数

                    end
                    
                    
                    Aup(i,j)=sum(man(i,j,:),'all');  %实际上车的人
                    %                 man_wait(i,j)=sum(man,3)+sum(w,3); %在j站等i车的人
                    wait(i,j)=l(i,j)+w(i,j); %实际在j等i车的人
                    down(i,j)=0; %i车在j站下车人数
                    u(i,j)=a1*Aup(i,j); %停站时间
                    d(i,j)=a(i,j)+u(i,j); %离站时间
                elseif j>1 &j<M
                    w(i,j)=0;
                    sheet_data = readtable(filename, 'Sheet', sheet_names{j}, 'PreserveVariableNames', true);
                    sheet_data.Properties.VariableNames = {'car', 'station1', 'time1', 'station2', 'time2'};
                    sheet_data.time1 = datetime(sheet_data.time1, 'InputFormat', 'yyyy-MM-dd HH:mm:ss');
                    sheet_data.station2 = str2double(string(sheet_data.station2));
                    l(i,j)=l(i,j-1); %刚进站时车上人数等于上站出发时车上人数
                    a(i,j)=d(i,j-1)+t(j-1); %到站时间
                    a_time(i,j) = start_time + minutes(a(i,j));
                    stranded{j} = []; % 存储被滞留的乘客信息
                    down(i,j)=sum(man(i,1:j-1,j)); %i车在j站下车人数，计算前3站去第四站的人数之和
                    
                    down_man(i,j)=0;
                    for s=1:size(up_sheet_data{i},1)
                        bi=up_sheet_data{i}.station2(s);
                        if bi==j
                            up_sheet_data{i}.downtime(s) = a_time(i,j);
                            down_man(i,j)=down_man(i,j)+1;
                        end
                    end
                    
                    valid_sheet_data = sheet_data(sheet_data.time1 < a_time(i,j), :);
                    new_col = table(zeros(size(valid_sheet_data, 1), 1)); % 新列，全为0
                    valid_sheet_data = [valid_sheet_data, new_col]; % 将新列添加到 valid_sheet_data

                    
                    for m = 1:size(valid_sheet_data, 1)
                        k=table2array(valid_sheet_data(m,4));
                        if c*PP(i)-l(i,j)+down(i,j)>0

                            man(i,j,k)=man(i,j,k)+1; %实际上i车的在j站去k站的人
                            l(i,j)=l(i,j)+1;%j站车上人数
                            up_sheet_data{i}(end+1,1:5) = valid_sheet_data(m,1:5);
                            up_sheet_data{i}.uptime(end) = a_time(i,j);

                        else
                            w(i,j)=w(i,j)+1;  %在j站等i车因车容量限制无法上车的人
                            w1(i,j,k)=w1(i,j,k)+1;%在j站去k站的被i车滞留的人
                            stranded{j} = [stranded{j};valid_sheet_data(m, :), table(i), table(j), table(k)]; % 存储被滞留的乘客信息

                        end
                        Aup_wait(i,j,k)=man(i,j,k); %j站等i去k站的人实际上车数
                    end
                    
                    Aup(i,j)=sum(man(i,j,:),'all');  %实际上车的人
                    wait(i,j)=Aup(i,j)+w(i,j); %实际在j等i车的人
%                     down(i,j)=sum(man(i,1:j-1,j)); %i车在j站下车人数，计算前3站去第四站的人数之和
                    l(i,j)=l(i,j)-down(i,j); %离站时车上人=上车人加上站离站车上人-下车人
                    u(i,j)=max(a1*Aup(i,j),a2*down(i,j)); %i车在j停站时间
                    d(i,j)=a(i,j)+u(i,j); %离站时间
                elseif j ==M
                    a(i,j)=d(i,j-1)+t(j-1); %到站时间
                    a_time(i,j) = start_time + minutes(a(i,j));
                    down_man(i,j)=0;
                    for s=1:size(up_sheet_data{i},1)
                        bi=up_sheet_data{i}.station2(s);
                        if bi==j
                            up_sheet_data{i}.downtime(s) = a_time(i,j);
                            down_man(i,j)=down_man(i,j)+1;
                        end
                    end
                    sheet_data = readtable(filename, 'Sheet', sheet_names{j}, 'PreserveVariableNames', true);
                    sheet_data.Properties.VariableNames = {'car', 'station1', 'time1', 'station2', 'time2'};
                    sheet_data.time1 = datetime(sheet_data.time1, 'InputFormat', 'yyyy-MM-dd HH:mm:ss');
                    sheet_data.station2 = str2double(string(sheet_data.station2));
                    
                    down(i,j)=sum(man(i,1:j-1,j)); %i车在j站下车人数，计算前3站去第四站的人数之和
                    l(i,j)=l(i,j-1); %刚进站时车上人数等于上站出发时车上人数
                    u(i,j)=a2*down(i,j); %i车在j停站时间
                    d(i,j)=a(i,j)+u(i,j); %离站时间
                end
            elseif i>1       
                if j==1
                    l(i,j)=0;
                    w(i,j)=0;
                    a_time(i,j) = start_time + minutes(a(i,j));
                    sheet_data = readtable(filename, 'Sheet', sheet_names{j}, 'PreserveVariableNames', true);
                    sheet_data.Properties.VariableNames = {'car', 'station1', 'time1', 'station2', 'time2'};
                    sheet_data.time1 = datetime(sheet_data.time1, 'InputFormat', 'yyyy-MM-dd HH:mm:ss');
                    sheet_data.station2 = str2double(string(sheet_data.station2));
                    %给每辆车新建一个记录乘客信息的表格
                    up_sheet_data{i} = table('Size',[0 7],'VariableTypes',{'double','double','datetime','double','datetime','datetime','datetime'},'VariableNames',{'car','station1','time1','station2','time2','uptime','downtime'});
                    up_sheet_data{i}.uptime = NaT(height(up_sheet_data{i}),1);
                    up_sheet_data{i}.downtime = NaT(height(up_sheet_data{i}),1);
                    if ~isempty(stranded{j})
                        keep_row = true(size(stranded{j},1),1); % 初始化逻辑向量
                        for f =1:size(stranded{j}, 1) %优先给滞留乘客上车
                            k=table2array(stranded{j}(f,4));
                            if c*PP(i)-l(i,j)>0

                                man(i,j,k) = man(i,j,k) + 1; % 实际上i车的在j站去k站的人
                                l(i,j) = l(i,j) + 1; % j站车上人数
                                up_sheet_data{i}(end+1,1:5) = stranded{j}(f,1:5);
                                up_sheet_data{i}.uptime(end) = a_time(i,j);
                                stranded{j}(f,9) = {-1};% 标记该乘客已经上车

                            else
                                w(i,j)=w(i,j)+1;  %在j站等i车因车容量限制无法上车的人

                                w1(i,j,k)=w1(i,j,k)+1;%在j站去k站的被i车滞留的人

                            end
                            keep_row(f) = (table2array(stranded{j}(f,7)) ~= -1) & (c*PP(i)-l(i,j)+down(i,j) <= 0);
                        end
                           
                        stranded{j} = stranded{j}(keep_row,:); % 删除标记为 false 的行

                    end
                           
                            
                    
                        %遍历乘客需求数据
                    valid_sheet_data = sheet_data(sheet_data.time1 > a_time(i-1,j) & sheet_data.time1 < a_time(i,j), :);
                    new_col = table(zeros(size(valid_sheet_data, 1), 1)); % 新列，全为0
                    valid_sheet_data = [valid_sheet_data, new_col]; % 将新列添加到 valid_sheet_data
                    for m = 1:size(valid_sheet_data, 1)
                        k=table2array(valid_sheet_data(m,4));
                        if c*PP(i)-l(i,j)>0
                            

                            man(i,j,k)=man(i,j,k)+1; %实际上i车的在j站去k站的人
                            l(i,j)=l(i,j)+1;%j站车上人数
                            up_sheet_data{i}(end+1,1:5) = valid_sheet_data(m,1:5);
                            up_sheet_data{i}.uptime(end) = a_time(i,j);

                        else
                            w(i,j)=w(i,j)+1;  %在j站等i车因车容量限制无法上车的人

                            w1(i,j,k)=w1(i,j,k)+1;%在j站去k站的被i车滞留的人
                            stranded{j} = [stranded{j};valid_sheet_data(m, :), table(i), table(j), table(k)]; % 存储被滞留的乘客信息

                        end
                        Aup_wait(i,j,k)=man(i,j,k); %j站等i去k站的人实际上车数

                    end
                        
                    
                    Aup(i,j)=sum(man(i,j,:),'all');  %实际上车的人
                    wait(i,j)=Aup(i,j)+w(i,j); %实际在j等i车的人  %%被上车滞留的乘客算等该车的乘客？
                    down(i,j)=0; %i车在j站下车人数，计算前3站去第四站的人数之和
                    u(i,j)=a1*Aup(i,j); %i车在j停站时间
                    d(i,j)=a(i,j)+u(i,j); %离站时间
                elseif j>1 &&j<M
                    
                    sheet_data = readtable(filename, 'Sheet', sheet_names{j}, 'PreserveVariableNames', true);
                    sheet_data.Properties.VariableNames = {'car', 'station1', 'time1', 'station2', 'time2'};
                    sheet_data.time1 = datetime(sheet_data.time1, 'InputFormat', 'yyyy-MM-dd HH:mm:ss');
                    l(i,j)=l(i,j-1); %刚进站时车上人数等于上站出发时车上人数
                    w(i,j)=0;
                    a(i,j)=d(i,j-1)+t(j-1); %到站时间
                    a_time(i,j) = start_time + minutes(a(i,j));
                    down(i,j)=sum(man(i,1:j-1,j)); %i车在j站下车人数，计算前3站去第四站的人数之和
                    down_man(i,j)=0;
                    for s=1:size(up_sheet_data{i},1)
                        bi=up_sheet_data{i}.station2(s);
                        if bi==j
                            up_sheet_data{i}.downtime(s) = a_time(i,j);
                            down_man(i,j)=down_man(i,j)+1;
                        end
                    end
                    if ~isempty(stranded{j})
                        keep_row = true(size(stranded{j},1),1); % 初始化逻辑向量
                        
                        for f =1:size(stranded{j}, 1) %优先给滞留乘客上车
                            k=table2array(stranded{j}(f,4));
                            if c*PP(i)-l(i,j)+down(i,j)>0
                                
                                man(i,j,k) = man(i,j,k) + 1; % 实际上i车的在j站去k站的人
                                l(i,j) = l(i,j) + 1; % j站车上人数
                                up_sheet_data{i}(end+1,1:5) = stranded{j}(f,1:5);
                                up_sheet_data{i}.uptime(end) = a_time(i,j);
%                                 keep_row(j) = false; % 将需要删除的行标记为 false
                                stranded{j}(f,9) = {-1}; % 标记该乘客已经上车
                                % 标记需要删除的行
                                
                            else
                                w(i,j)=w(i,j)+1;  %在j站等i车因车容量限制无法上车的人
                                
                                w1(i,j,k)=w1(i,j,k)+1;%在j站去k站的被i车滞留的人
                                
                            end
                            keep_row(f) = (table2array(stranded{j}(f,7)) ~= -1) & (c*PP(i)-l(i,j)+down(i,j) <= 0);

%                             stranded{j}(stranded{j}(:,9) == -1,:) = [];
%                             stranded{j}(stranded{j}.Var9 == -1,:) = [];

                        end
                        % 删除标记为-1的行
                        stranded{j} = stranded{j}(keep_row,:); % 删除标记为 false 的行
                            
                    end

                        %遍历乘客需求数据
                    valid_sheet_data = sheet_data(sheet_data.time1 > a_time(i-1,j) & sheet_data.time1 < a_time(i,j), :);
                    new_col = table(zeros(size(valid_sheet_data, 1), 1)); % 新列，全为0
                    valid_sheet_data = [valid_sheet_data, new_col]; % 将新列添加到 valid_sheet_data
                    for m = 1:size(valid_sheet_data, 1)
                        k=table2array(valid_sheet_data(m,4));
                        if c*PP(i)-l(i,j)+down(i,j)>0

                            man(i,j,k)=man(i,j,k)+1; %实际上i车的在j站去k站的人
                            l(i,j)=l(i,j)+1;%j站车上人数
                            up_sheet_data{i}(end+1,1:5) = valid_sheet_data(m,1:5);
                            up_sheet_data{i}.uptime(end) = a_time(i,j);

                        else
                            w(i,j)=w(i,j)+1;  %在j站等i车因车容量限制无法上车的人

                            w1(i,j,k)=w1(i,j,k)+1;%在j站去k站的被i车滞留的人
                            stranded{j} = [stranded{j}; valid_sheet_data(m, :), table(i), table(j), table(k)]; % 存储被滞留的乘客信息

                        end
                        Aup_wait(i,j,k)=man(i,j,k); %j站等i去k站的人实际上车数
                    end
                        
                    
                    Aup(i,j)=sum(man(i,j,:),'all');  %实际上车的人
                    wait(i,j)=Aup(i,j)+w(i,j); %实际在j等i车的人
%                     down(i,j)=sum(man(i,1:j-1,j)); %i车在j站下车人数，计算前3站去第四站的人数之和
                    l(i,j)=l(i,j)-down(i,j); %离站时车上人=上车人加上站离站车上人-下车人
                    u(i,j)=max(a1*Aup(i,j),a2*down(i,j)); %i车在j停站时间
                    d(i,j)=a(i,j)+u(i,j); %离站时间
                elseif j ==M
                    down_man(i,j)=0;
                    a(i,j)=d(i,j-1)+t(j-1); %到站时间
                    a_time(i,j) = start_time + minutes(a(i,j));
                    for s=1:size(up_sheet_data{i},1)
                        bi=up_sheet_data{i}.station2(s);
                        if bi==j
                            up_sheet_data{i}.downtime(s) = a_time(i,j);
                            down_man(i,j)=down_man(i,j)+1;
                        end
                    end
                    sheet_data = readtable(filename, 'Sheet', sheet_names{j}, 'PreserveVariableNames', true);
                    sheet_data.Properties.VariableNames = {'car', 'station1', 'time1', 'station2', 'time2'};
                    sheet_data.time1 = datetime(sheet_data.time1, 'InputFormat', 'yyyy-MM-dd HH:mm:ss');
                    
                    down(i,j)=sum(man(i,1:j-1,j)); %i车在j站下车人数，计算前3站去第四站的人数之和
                    l(i,j)=l(i,j-1); %刚进站时车上人数等于上站出发时车上人数
                    u(i,j)=a2*down(i,j); %i车在j停站时间
                    d(i,j)=a(i,j)+u(i,j); %离站时间
                end
            end
        
    end
end
